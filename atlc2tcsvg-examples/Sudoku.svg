<svg xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://www.w3.org/2000/svg" xmlns:c="http://myconstraints">
	<script>
		
		var OCLLibrary = {
		    __asArray(x) {
		        if (Array.isArray(x)) {
		            return x;
		        }
		        else {
		            return [x];
		        }
		    },
		
		    size(collection) {
		        return this.__asArray(collection).length;
		    },
		
		    notEmpty(collection) {
		        return this.size(collection) != 0;
		    },
		
		    empty(collection) {
		        return this.size(collection) == 0;
		    },
		
		    union(lhs, rhs) {
		        return lhs.concat(rhs);
		    },
		
		    at(collection, idx) {
		        return this.__asArray(collection)[idx - 1];
		    },
		
		    subSequence(collection, start, end) {
		        return this.__asArray(collection).slice(start - 1, end);
		    },
		
		    sum(collection) {
		        return this.__asArray(collection).reduce((acc, val) => acc + val);
		    },
		
		    iterate(collection, seed, lambda) {
		        return this.__asArray(collection).reduce(lambda, seed);
		    },
		
		    collect(collection, lambda) {
		        return this.__asArray(collection).map(lambda);
		    },
		
		    zipWith(left, right, lambda) {
			const length = Math.min(left.length, right.length);
		        return left.slice(0, length).map((v, idx) => lambda(v, right[idx]));
		    },
		
		    prepend(collection, element) {
		        return [element].concat(collection);
		    },
		
		    includes(collection, element) {
		        return this.__asArray(collection).includes(element);
		    },
		
		    oclIsUndefined(val) {
		        return val ? false : true;
		    },
		
		    oclType(val) {
		        //TODO implement oclType
		    },
		
		    oclIsKindOf(val, type) {
		        //TODO implement oclIsKindOf
		    },
		
		    toString(val) {
		        return val.toString();
		    },
		
		    asOrderedSet(collection) {
		        return new Set(collection);
		    },
		
		    startWiths(str, prefix) {
		        return str.startWiths(prefix);
		    },
		
		    first(collection) {
		        return this.__asArray(collection)[0];
		    },
		
		    last(collection) {
		        let c = this.__asArray(collection);
		        return c[c.length - 1];
		    },
		
		    toInteger(string) {
		        return string * 1;
		    },
		}
		
		

		// 20:1-20:36
		function __attribute__CELL_WIDTH() {
			return 20
			;
		}
		// 21:1-21:37
		function __attribute__CELL_HEIGHT() {
			return 20
			;
		}
		// 22:1-22:32
		function __attribute__OFFSET() {
			return 20
			;
		}
	</script>
	<defs>
		<!-- Sudoku.atl - 24:1-41:2 -->
		<g id="grid" >
			<rect id=".rect"/>
			<!-- constraints -->
			<constraints name="constraints">
				{
					let s = this;
					return 				this.rect.width
								.ge(
									(new tcsvg.Expression(50))
								)
							.and(
									this.rect.height
								.ge(
									(new tcsvg.Expression(50))
								)
							)
						.and(
								this.rect.x
							.eq(
								(new tcsvg.Expression(0))
							)
						)
					.and(
							this.rect.y
						.eq(
							(new tcsvg.Expression(0))
						)
					);
			}
			</constraints>
		</g>
		<!-- Sudoku.atl - 43:1-64:2 -->
		<g id="cell">
			<rect id=".rect" class="cell"/>
			<text id=".text" content-value="param(value)"  >
				default
			</text>
			<!-- constraints -->
			<constraints name="constraints">
				{
					let s = this;
					this.text.elem.setAttribute("class-disabled", (((s.hasConflict*1)) == (0)) ? (
						""
					) : (
						"conflict"
					));
					return 						this.rect.width
										.eq(
											(new tcsvg.Expression(__attribute__CELL_WIDTH()))
										)
									.and(
											this.rect.height
										.eq(
											(new tcsvg.Expression(__attribute__CELL_HEIGHT()))
										)
									)
								.and(
										this.rect.x
									.eq(
											(new tcsvg.Expression(__attribute__CELL_WIDTH()))
										.times(
											(new tcsvg.Expression(s.x*1))
										)
									)
								)
							.and(
									this.rect.y
								.eq(
										(new tcsvg.Expression(__attribute__CELL_HEIGHT()))
									.times(
										(new tcsvg.Expression(s.y*1))
									)
								)
							)
						.and(
								this.text.x
							.eq(
											(new tcsvg.Expression(__attribute__CELL_WIDTH()))
										.times(
											(new tcsvg.Expression(s.x*1))
										)
									.plus(
											(new tcsvg.Expression(__attribute__CELL_WIDTH()))
										.div(
											(new tcsvg.Expression(2))
										)
									)
								.minus(
										this.text.width
									.div(
										(new tcsvg.Expression(2))
									)
								)
							)
						)
					.and(
							this.text.y
						.eq(
										(new tcsvg.Expression(__attribute__CELL_HEIGHT()))
									.times(
										(new tcsvg.Expression(s.y*1))
									)
								.plus(
										(new tcsvg.Expression(__attribute__CELL_HEIGHT()))
									.div(
										(new tcsvg.Expression(2))
									)
								)
							.minus(
									this.text.height
								.div(
									(new tcsvg.Expression(2))
								)
							)
						)
					);
			}
			</constraints>
		</g>
	</defs>


	<style>
		text {
		       fill:black;
		}
		
		.cell {
		       fill: white;
		       stroke:black;
		       stroke-width: 1px;
		}
		
		.conflict {
			fill:red;
		}
	</style>

	<script href="https://418252c5e69e7fe6c6c1e4aedba4dafe.kher.nl//tcsvg/c.js"/>
	<script href="https://418252c5e69e7fe6c6c1e4aedba4dafe.kher.nl//tcsvg/TCSVG.min.js"/>
	<script>
		/*!
		 * qqwing - Sudoku solver and generator
		 * Copyright (C) 2014 Stephen Ostermiller
		 *
		 * This program is free software; you can redistribute it and/or modify
		 * it under the terms of the GNU General Public License as published by
		 * the Free Software Foundation; either version 2 of the License, or
		 * (at your option) any later version.
		 *
		 * This program is distributed in the hope that it will be useful,
		 * but WITHOUT ANY WARRANTY; without even the implied warranty of
		 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
		 * GNU General Public License for more details.
		 *
		 * You should have received a copy of the GNU General Public License along
		 * with this program; if not, write to the Free Software Foundation, Inc.,
		 * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
		 */
		var qqwing=function(){var ag=function(i){return i%qqwing.ROW_COL_SEC_SIZE};var K=function(i){return Math.floor(i/qqwing.ROW_COL_SEC_SIZE)};var N=function(i){return Math.floor(i/qqwing.SEC_GROUP_SIZE)*qqwing.SEC_GROUP_SIZE+Math.floor(ag(i)/qqwing.GRID_SIZE)*qqwing.GRID_SIZE};var o=function(i){return Math.floor(i/qqwing.SEC_GROUP_SIZE)*qqwing.GRID_SIZE+Math.floor(ag(i)/qqwing.GRID_SIZE)};var h=function(i){return qqwing.ROW_COL_SEC_SIZE*i};var X=function(i){return i};var U=function(i){return(i%qqwing.GRID_SIZE*qqwing.GRID_SIZE)+Math.floor(i/qqwing.GRID_SIZE)*qqwing.SEC_GROUP_SIZE};var aa=function(ah,i){return ah+(qqwing.ROW_COL_SEC_SIZE*i)};var j=function(ah,i){return(ah*qqwing.ROW_COL_SEC_SIZE)+i};var C=function(i,ah){return U(i)+Math.floor(ah/qqwing.GRID_SIZE)*qqwing.ROW_COL_SEC_SIZE+(ah%qqwing.GRID_SIZE)};var L=function(i){if((typeof console!="undefined")&amp;&amp;console.log){console.log(i)}};var W=function(i){if((typeof process!="undefined")&amp;&amp;process.stdout&amp;&amp;process.stdout.write){process.stdout.write(i)}else{L(i)}};var z=new Array(qqwing.BOARD_SIZE);var c=new Array(qqwing.BOARD_SIZE);var l=new Array(qqwing.BOARD_SIZE);var v=new Array(qqwing.POSSIBILITY_SIZE);var ad=new Array(qqwing.BOARD_SIZE);for(var Z=0;Z&lt;qqwing.BOARD_SIZE;Z++){ad[Z]=Z}var a=new Array(qqwing.ROW_COL_SEC_SIZE);for(var Z=0;Z&lt;qqwing.ROW_COL_SEC_SIZE;Z++){a[Z]=Z}var k=false;var ae=false;var q=[];var H=[];var S=qqwing.PrintStyle.READABLE;var x=0;var O=function(){for(var ak=0;ak&lt;qqwing.BOARD_SIZE;ak++){c[ak]=0}for(var ak=0;ak&lt;qqwing.BOARD_SIZE;ak++){l[ak]=0}for(var ak=0;ak&lt;qqwing.POSSIBILITY_SIZE;ak++){v[ak]=0}q=[];H=[];var aj=1;for(var ah=0;ah&lt;qqwing.BOARD_SIZE;ah++){if(z[ah]>0){var ai=z[ah]-1;var al=aa(ai,ah);var am=z[ah];if(v[al]!=0){return false}m.call(this,ah,aj,am);if(ae||k){D.call(this,new this.LogItem(aj,qqwing.LogType.GIVEN,am,ah))}}}return true};var B=function(i){if(t.call(this,i)){return true}if(f.call(this,i)){return true}if(u.call(this,i)){return true}if(R.call(this,i)){return true}if(af.call(this,i)){return true}if(p.call(this,i)){return true}if(V.call(this,i)){return true}if(F.call(this,i)){return true}if(I.call(this,i)){return true}if(e.call(this,i)){return true}if(A.call(this,i)){return true}if(T.call(this,i)){return true}return false};var t=function(ai){for(var i=0;i&lt;qqwing.BOARD_SIZE;i++){if(c[i]==0){var al=0;var aj=0;for(var ah=0;ah&lt;qqwing.ROW_COL_SEC_SIZE;ah++){var ak=aa(ah,i);if(v[ak]==0){al++;aj=ah+1}}if(al==1){m.call(this,i,ai,aj);if(ae||k){D.call(this,new this.LogItem(ai,qqwing.LogType.SINGLE,aj,i))}return true}}}return false};var u=function(am){for(var ao=0;ao&lt;qqwing.ROW_COL_SEC_SIZE;ao++){for(var an=0;an&lt;qqwing.ROW_COL_SEC_SIZE;an++){var aj=0;var al=0;for(var i=0;i&lt;qqwing.ROW_COL_SEC_SIZE;i++){var ai=(ao*qqwing.ROW_COL_SEC_SIZE)+i;var ah=aa(an,ai);if(v[ah]==0){aj++;al=ai}}if(aj==1){var ak=an+1;if(ae||k){D.call(this,new this.LogItem(am,qqwing.LogType.HIDDEN_SINGLE_ROW,ak,al))}m.call(this,al,am,ak);return true}}}return false};var R=function(am){for(var i=0;i&lt;qqwing.ROW_COL_SEC_SIZE;i++){for(var an=0;an&lt;qqwing.ROW_COL_SEC_SIZE;an++){var aj=0;var al=0;for(var ao=0;ao&lt;qqwing.ROW_COL_SEC_SIZE;ao++){var ai=j(ao,i);var ah=aa(an,ai);if(v[ah]==0){aj++;al=ai}}if(aj==1){var ak=an+1;if(ae||k){D.call(this,new this.LogItem(am,qqwing.LogType.HIDDEN_SINGLE_COLUMN,ak,al))}m.call(this,al,am,ak);return true}}}return false};var f=function(aq){for(var an=0;an&lt;qqwing.ROW_COL_SEC_SIZE;an++){var aj=U(an);for(var ar=0;ar&lt;qqwing.ROW_COL_SEC_SIZE;ar++){var am=0;var ap=0;for(var ak=0;ak&lt;qqwing.GRID_SIZE;ak++){for(var ai=0;ai&lt;qqwing.GRID_SIZE;ai++){var al=aj+ak+qqwing.ROW_COL_SEC_SIZE*ai;var ah=aa(ar,al);if(v[ah]==0){am++;ap=al}}}if(am==1){var ao=ar+1;if(ae||k){D.call(this,new this.LogItem(aq,qqwing.LogType.HIDDEN_SINGLE_SECTION,ao,ap))}m.call(this,ap,aq,ao);return true}}}return false};var y=function(aj,ao){var al=0;var ah=d.call(this);for(var ak=0;ak&lt;qqwing.ROW_COL_SEC_SIZE;ak++){var ai=a[ak];var am=aa(ai,ah);if(v[am]==0){if(al==ao){var an=ai+1;if(ae||k){D.call(this,new this.LogItem(aj,qqwing.LogType.GUESS,an,ah))}m.call(this,ah,aj,an);return true}al++}}return false};var Q=function(){for(var i=0;i&lt;qqwing.BOARD_SIZE;i++){if(c[i]==0){var aj=0;for(var ah=0;ah&lt;qqwing.ROW_COL_SEC_SIZE;ah++){var ai=aa(ah,i);if(v[ai]==0){aj++}}if(aj==0){return true}}}return false};var M=function(ah){if(ae||k){D.call(this,new this.LogItem(ah,qqwing.LogType.ROLLBACK))}for(var ai=0;ai&lt;qqwing.BOARD_SIZE;ai++){if(l[ai]==ah){l[ai]=0;c[ai]=0}}for(var ai=0;ai&lt;qqwing.POSSIBILITY_SIZE;ai++){if(v[ai]==ah){v[ai]=0}}while(H.length>0&amp;&amp;H[H.length-1]==ah){H.pop()}};var p=function(au){for(var av=0;av&lt;qqwing.ROW_COL_SEC_SIZE;av++){for(var ar=0;ar&lt;qqwing.ROW_COL_SEC_SIZE;ar++){var an=U(ar);var ah=true;var ai=-1;for(var am=0;am&lt;qqwing.GRID_SIZE;am++){for(var ao=0;ao&lt;qqwing.GRID_SIZE;ao++){var at=an+ao+(qqwing.ROW_COL_SEC_SIZE*am);var al=aa(av,at);if(v[al]==0){if(ai==-1||ai==am){ai=am}else{ah=false}}}}if(ah&amp;&amp;ai!=-1){var aj=false;var aw=K(an)+ai;var ak=h(aw);for(var ao=0;ao&lt;qqwing.ROW_COL_SEC_SIZE;ao++){var ap=ak+ao;var aq=o(ap);var al=aa(av,ap);if(ar!=aq&amp;&amp;v[al]==0){v[al]=au;aj=true}}if(aj){if(ae||k){D.call(this,new this.LogItem(au,qqwing.LogType.POINTING_PAIR_TRIPLE_ROW,av+1,ak))}return true}}}}return false};var F=function(av){for(var aw=0;aw&lt;qqwing.ROW_COL_SEC_SIZE;aw++){for(var ay=0;ay&lt;qqwing.ROW_COL_SEC_SIZE;ay++){var aj=h(ay);var aq=true;var at=-1;for(var an=0;an&lt;qqwing.GRID_SIZE;an++){for(var al=0;al&lt;qqwing.GRID_SIZE;al++){var ai=an*qqwing.GRID_SIZE+al;var ao=j(ay,ai);var ak=aa(aw,ao);if(v[ak]==0){if(at==-1||at==an){at=an}else{aq=false}}}}if(aq&amp;&amp;at!=-1){var ah=false;var ai=qqwing.GRID_SIZE*at;var am=N(j(ay,ai));var ar=K(am);var ax=ag(am);for(var an=0;an&lt;qqwing.GRID_SIZE;an++){for(var al=0;al&lt;qqwing.GRID_SIZE;al++){var au=ar+an;var ap=ax+al;var ao=j(au,ap);var ak=aa(aw,ao);if(ay!=au&amp;&amp;v[ak]==0){v[ak]=av;ah=true}}}if(ah){if(ae||k){D.call(this,new this.LogItem(av,qqwing.LogType.ROW_BOX,aw+1,aj))}return true}}}}return false};var I=function(av){for(var aw=0;aw&lt;qqwing.ROW_COL_SEC_SIZE;aw++){for(var ay=0;ay&lt;qqwing.ROW_COL_SEC_SIZE;ay++){var aj=h(ay);var aq=true;var at=-1;for(var an=0;an&lt;qqwing.GRID_SIZE;an++){for(var al=0;al&lt;qqwing.GRID_SIZE;al++){var ai=an*qqwing.GRID_SIZE+al;var ao=j(ay,ai);var ak=aa(aw,ao);if(v[ak]==0){if(at==-1||at==an){at=an}else{aq=false}}}}if(aq&amp;&amp;at!=-1){var ah=false;var ai=qqwing.GRID_SIZE*at;var am=N(j(ay,ai));var ar=K(am);var ax=ag(am);for(var an=0;an&lt;qqwing.GRID_SIZE;an++){for(var al=0;al&lt;qqwing.GRID_SIZE;al++){var au=ar+an;var ap=ax+al;var ao=j(au,ap);var ak=aa(aw,ao);if(ay!=au&amp;&amp;v[ak]==0){v[ak]=av;ah=true}}}if(ah){if(ae||k){D.call(this,new this.LogItem(av,qqwing.LogType.ROW_BOX,aw+1,aj))}return true}}}}return false};var V=function(av){for(var aw=0;aw&lt;qqwing.ROW_COL_SEC_SIZE;aw++){for(var at=0;at&lt;qqwing.ROW_COL_SEC_SIZE;at++){var ao=U(at);var aj=true;var am=-1;for(var ap=0;ap&lt;qqwing.GRID_SIZE;ap++){for(var al=0;al&lt;qqwing.GRID_SIZE;al++){var au=ao+ap+(qqwing.ROW_COL_SEC_SIZE*al);var ak=aa(aw,au);if(v[ak]==0){if(am==-1||am==ap){am=ap}else{aj=false}}}}if(aj&amp;&amp;am!=-1){var ai=false;var ah=ag(ao)+am;var an=X(ah);for(var ap=0;ap&lt;qqwing.ROW_COL_SEC_SIZE;ap++){var aq=an+(qqwing.ROW_COL_SEC_SIZE*ap);var ar=o(aq);var ak=aa(aw,aq);if(at!=ar&amp;&amp;v[ak]==0){v[ak]=av;ai=true}}if(ai){if(ae||k){D.call(this,new this.LogItem(av,qqwing.LogType.POINTING_PAIR_TRIPLE_COLUMN,aw+1,an))}return true}}}}return false};var e=function(ax){for(var aj=0;aj&lt;qqwing.ROW_COL_SEC_SIZE;aj++){for(var ak=0;ak&lt;qqwing.ROW_COL_SEC_SIZE;ak++){var aq=-1;var ap=-1;var al=0;for(var ah=0;ah&lt;qqwing.ROW_COL_SEC_SIZE;ah++){var az=j(aj,ah);var i=aa(ak,az);if(v[i]==0){if(aq==-1||aq==ah){aq=ah}else{if(ap==-1||ap==ah){ap=ah}}al++}}if(al==2){for(var ay=ak+1;ay&lt;qqwing.ROW_COL_SEC_SIZE;ay++){var ao=-1;var an=-1;var am=0;for(var ah=0;ah&lt;qqwing.ROW_COL_SEC_SIZE;ah++){var az=j(aj,ah);var i=aa(ay,az);if(v[i]==0){if(ao==-1||ao==ah){ao=ah}else{if(an==-1||an==ah){an=ah}}am++}}if(am==2&amp;&amp;aq==ao&amp;&amp;ap==an){var ai=false;for(var aw=0;aw&lt;qqwing.ROW_COL_SEC_SIZE;aw++){if(aw!=ak&amp;&amp;aw!=ay){var av=j(aj,aq);var at=j(aj,ap);var au=aa(aw,av);var ar=aa(aw,at);if(v[au]==0){v[au]=ax;ai=true}if(v[ar]==0){v[ar]=ax;ai=true}}}if(ai){if(ae||k){D.call(this,new this.LogItem(ax,qqwing.LogType.HIDDEN_PAIR_ROW,ak+1,j(aj,aq)))}return true}}}}}}return false};var A=function(ax){for(var ah=0;ah&lt;qqwing.ROW_COL_SEC_SIZE;ah++){for(var ak=0;ak&lt;qqwing.ROW_COL_SEC_SIZE;ak++){var av=-1;var ar=-1;var al=0;for(var aj=0;aj&lt;qqwing.ROW_COL_SEC_SIZE;aj++){var az=j(aj,ah);var i=aa(ak,az);if(v[i]==0){if(av==-1||av==aj){av=aj}else{if(ar==-1||ar==aj){ar=aj}}al++}}if(al==2){for(var ay=ak+1;ay&lt;qqwing.ROW_COL_SEC_SIZE;ay++){var ao=-1;var an=-1;var am=0;for(var aj=0;aj&lt;qqwing.ROW_COL_SEC_SIZE;aj++){var az=j(aj,ah);var i=aa(ay,az);if(v[i]==0){if(ao==-1||ao==aj){ao=aj}else{if(an==-1||an==aj){an=aj}}am++}}if(am==2&amp;&amp;av==ao&amp;&amp;ar==an){var ai=false;for(var aw=0;aw&lt;qqwing.ROW_COL_SEC_SIZE;aw++){if(aw!=ak&amp;&amp;aw!=ay){var au=j(av,ah);var aq=j(ar,ah);var at=aa(aw,au);var ap=aa(aw,aq);if(v[at]==0){v[at]=ax;ai=true}if(v[ap]==0){v[ap]=ax;ai=true}}}if(ai){if(ae||k){D.call(this,new this.LogItem(ax,qqwing.LogType.HIDDEN_PAIR_COLUMN,ak+1,j(av,ah)))}return true}}}}}}return false};var T=function(ax){for(var am=0;am&lt;qqwing.ROW_COL_SEC_SIZE;am++){for(var an=0;an&lt;qqwing.ROW_COL_SEC_SIZE;an++){var al=-1;var ak=-1;var ao=0;for(var av=0;av&lt;qqwing.ROW_COL_SEC_SIZE;av++){var az=C(am,av);var i=aa(an,az);if(v[i]==0){if(al==-1||al==av){al=av}else{if(ak==-1||ak==av){ak=av}}ao++}}if(ao==2){for(var ay=an+1;ay&lt;qqwing.ROW_COL_SEC_SIZE;ay++){var ai=-1;var ah=-1;var ap=0;for(var av=0;av&lt;qqwing.ROW_COL_SEC_SIZE;av++){var az=C(am,av);var i=aa(ay,az);if(v[i]==0){if(ai==-1||ai==av){ai=av}else{if(ah==-1||ah==av){ah=av}}ap++}}if(ap==2&amp;&amp;al==ai&amp;&amp;ak==ah){var aj=false;for(var aw=0;aw&lt;qqwing.ROW_COL_SEC_SIZE;aw++){if(aw!=an&amp;&amp;aw!=ay){var au=C(am,al);var ar=C(am,ak);var at=aa(aw,au);var aq=aa(aw,ar);if(v[at]==0){v[at]=ax;aj=true}if(v[aq]==0){v[aq]=ax;aj=true}}}if(aj){if(ae||k){D.call(this,new this.LogItem(ax,qqwing.LogType.HIDDEN_PAIR_SECTION,an+1,C(am,al)))}return true}}}}}}return false};var m=function(ao,au,ar){if(c[ao]!=0){throw ("Marking position that already has been marked.")}if(l[ao]!=0){throw ("Marking position that was marked another round.")}var av=ar-1;c[ao]=ar;var aw=aa(av,ao);if(v[aw]!=0){throw ("Marking impossible position.")}l[ao]=au;var ai=K(ao)*qqwing.ROW_COL_SEC_SIZE;for(var ah=0;ah&lt;qqwing.ROW_COL_SEC_SIZE;ah++){var ap=ai+ah;var aj=aa(av,ap);if(v[aj]==0){v[aj]=au}}var an=ag(ao);for(var am=0;am&lt;qqwing.ROW_COL_SEC_SIZE;am++){var aq=an+(qqwing.ROW_COL_SEC_SIZE*am);var aj=aa(av,aq);if(v[aj]==0){v[aj]=au}}var al=N(ao);for(var am=0;am&lt;qqwing.GRID_SIZE;am++){for(var ak=0;ak&lt;qqwing.GRID_SIZE;ak++){var at=al+am+(qqwing.ROW_COL_SEC_SIZE*ak);var aj=aa(av,at);if(v[aj]==0){v[aj]=au}}}for(var av=0;av&lt;qqwing.ROW_COL_SEC_SIZE;av++){var aj=aa(av,ao);if(v[aj]==0){v[aj]=au}}};var d=function(){var an=10;var am=0;for(var aj=0;aj&lt;qqwing.BOARD_SIZE;aj++){var ah=ad[aj];if(c[ah]==0){var al=0;for(var ai=0;ai&lt;qqwing.ROW_COL_SEC_SIZE;ai++){var ak=aa(ai,ah);if(v[ak]==0){al++}}if(al&lt;an){an=al;am=ah}}}return am};var af=function(av){for(var ar=0;ar&lt;qqwing.BOARD_SIZE;ar++){var ai=g(ar);if(ai==2){var aw=K(ar);var am=ag(ar);var au=N(ar);for(var al=ar;al&lt;qqwing.BOARD_SIZE;al++){if(ar!=al){var aq=g(al);if(aq==2&amp;&amp;P(ar,al)){if(aw==K(al)){var ak=false;for(var ah=0;ah&lt;qqwing.ROW_COL_SEC_SIZE;ah++){var aj=j(aw,ah);if(aj!=ar&amp;&amp;aj!=al&amp;&amp;J(ar,aj,av)){ak=true}}if(ak){if(ae||k){D.call(this,new this.LogItem(av,qqwing.LogType.NAKED_PAIR_ROW,0,ar))}return true}}if(am==ag(al)){var ak=false;for(var at=0;at&lt;qqwing.ROW_COL_SEC_SIZE;at++){var aj=j(at,am);if(aj!=ar&amp;&amp;aj!=al&amp;&amp;J(ar,aj,av)){ak=true}}if(ak){if(ae||k){D.call(this,new this.LogItem(av,qqwing.LogType.NAKED_PAIR_COLUMN,0,ar))}return true}}if(au==N(al)){var ak=false;var ap=N(ar);for(var ao=0;ao&lt;qqwing.GRID_SIZE;ao++){for(var an=0;an&lt;qqwing.GRID_SIZE;an++){var aj=ap+ao+(qqwing.ROW_COL_SEC_SIZE*an);if(aj!=ar&amp;&amp;aj!=al&amp;&amp;J(ar,aj,av)){ak=true}}}if(ak){if(ae||k){D.call(this,new this.LogItem(av,qqwing.LogType.NAKED_PAIR_SECTION,0,ar))}return true}}}}}}}return false};var g=function(i){var aj=0;for(var ah=0;ah&lt;qqwing.ROW_COL_SEC_SIZE;ah++){var ai=aa(ah,i);if(v[ai]==0){aj++}}return aj};var P=function(ai,i){for(var ah=0;ah&lt;qqwing.ROW_COL_SEC_SIZE;ah++){var ak=aa(ah,ai);var aj=aa(ah,i);if((v[ak]==0||v[aj]==0)&amp;&amp;(v[ak]!=0||v[aj]!=0)){return false}}return true};var D=function(i){if(ae){i.print()}if(k){q.push(i);H.push(i)}};var r=function(){w(ad,qqwing.BOARD_SIZE);w(a,qqwing.ROW_COL_SEC_SIZE)};var Y=function(i){W(ab.call(this,i))};var ab=function(ai){var aj="";for(var ah=0;ah&lt;qqwing.BOARD_SIZE;ah++){if(S==qqwing.PrintStyle.READABLE){aj+=" "}if(ai[ah]==0){aj+="."}else{aj+=ai[ah]}if(ah==qqwing.BOARD_SIZE-1){if(S==qqwing.PrintStyle.CSV){aj+=","}else{aj+="\n"}if(S==qqwing.PrintStyle.READABLE||S==qqwing.PrintStyle.COMPACT){aj+="\n"}}else{if(ah%qqwing.ROW_COL_SEC_SIZE==qqwing.ROW_COL_SEC_SIZE-1){if(S==qqwing.PrintStyle.READABLE||S==qqwing.PrintStyle.COMPACT){aj+="\n"}if(ah%qqwing.SEC_GROUP_SIZE==qqwing.SEC_GROUP_SIZE-1){if(S==qqwing.PrintStyle.READABLE){aj+="-------|-------|-------\n"}}}else{if(ah%qqwing.GRID_SIZE==qqwing.GRID_SIZE-1){if(S==qqwing.PrintStyle.READABLE){aj+=" |"}}}}}return aj};var G=function(){for(var ah=2;ah&lt;=x;ah+=2){M.call(this,ah)}};var E=function(){for(var ah=0;ah&lt;qqwing.BOARD_SIZE;ah++){z[ah]=0}O.call(this)};var b=function(i){W(ac(i))};var ac=function(ah){var aj="";if(!k){aj+="History was not recorded.";if(S==qqwing.PrintStyle.CSV){aj+=" -- "}else{aj+="\n"}}for(var ai=0;ai&lt;ah.length;ai++){aj+=ai+1+". "+ah[ai].toString();if(S==qqwing.PrintStyle.CSV){aj+=" -- "}else{aj+="\n"}}if(S==qqwing.PrintStyle.CSV){aj+=","}else{aj+="\n"}return aj};var J=function(ai,i,aj){var am=false;for(var ah=0;ah&lt;qqwing.ROW_COL_SEC_SIZE;ah++){var al=aa(ah,ai);var ak=aa(ah,i);if(v[al]==0&amp;&amp;v[ak]==0){v[ak]=aj;am=true}}return am};var w=function(am,aj){for(var ai=0;ai&lt;aj;ai++){var ak=aj-ai;var al=Math.floor(Math.random()*ak)+ai;var ah=am[ai];am[ai]=am[al];am[al]=ah}};var n=function(){var i=Math.floor(Math.random()*4);switch(i){case 0:return qqwing.Symmetry.ROTATE90;case 1:return qqwing.Symmetry.ROTATE180;case 2:return qqwing.Symmetry.MIRROR;case 3:return qqwing.Symmetry.FLIP}throw ("Unexpected random value: "+i)};var s=function(ah,aj){var ak=0;for(var ai=0;ai&lt;ah.length;ai++){if((ah[ai]).getType()==aj){ak++}}return ak};this.LogItem=function(al,aj,ai,an){var ah=al;var ak=aj;var am=ai;var i=an;this.getRound=function(){return ah};this.print=function(){L(this.toString())};this.getType=function(){return ak};this.getColumn=function(){if(i==-1){return -1}return ag(i)};this.getRow=function(){if(i==-1){return -1}return K(i)};this.getPosition=function(){return i};this.getValue=function(){return am};this.getDescription=function(){switch(this.getType()){case qqwing.LogType.GIVEN:return"Mark given";case qqwing.LogType.ROLLBACK:return"Roll back round";case qqwing.LogType.GUESS:return"Mark guess (start round)";case qqwing.LogType.HIDDEN_SINGLE_ROW:return"Mark single possibility for value in row";case qqwing.LogType.HIDDEN_SINGLE_COLUMN:return"Mark single possibility for value in column";case qqwing.LogType.HIDDEN_SINGLE_SECTION:return"Mark single possibility for value in section";case qqwing.LogType.SINGLE:return"Mark only possibility for cell";case qqwing.LogType.NAKED_PAIR_ROW:return"Remove possibilities for naked pair in row";case qqwing.LogType.NAKED_PAIR_COLUMN:return"Remove possibilities for naked pair in column";case qqwing.LogType.NAKED_PAIR_SECTION:return"Remove possibilities for naked pair in section";case qqwing.LogType.POINTING_PAIR_TRIPLE_ROW:return"Remove possibilities for row because all values are in one section";case qqwing.LogType.POINTING_PAIR_TRIPLE_COLUMN:return"Remove possibilities for column because all values are in one section";case qqwing.LogType.ROW_BOX:return"Remove possibilities for section because all values are in one row";case qqwing.LogType.COLUMN_BOX:return"Remove possibilities for section because all values are in one column";case qqwing.LogType.HIDDEN_PAIR_ROW:return"Remove possibilities from hidden pair in row";case qqwing.LogType.HIDDEN_PAIR_COLUMN:return"Remove possibilities from hidden pair in column";case qqwing.LogType.HIDDEN_PAIR_SECTION:return"Remove possibilities from hidden pair in section";default:return"!!! Performed unknown optimization !!!"}};this.toString=function(){var ao="Round: "+this.getRound()+" - ";ao+=this.getDescription();if(am>0||i>-1){ao+=" (";var ap=false;if(i>-1){if(ap){ao+=" - "}ao+="Row: "+(K(i)+1)+" - Column: "+(ag(i)+1);ap=true}if(am>0){if(ap){ao+=" - "}ao+="Value: "+am;ap=true}ao+=")"}return ao}};this.setPuzzle=function(ai){for(var ah=0;ah&lt;qqwing.BOARD_SIZE;ah++){z[ah]=ai[ah]}return O.call(this)};this.printPuzzle=function(){return Y.call(this,z)};this.getPuzzleString=function(){return ab.call(this,z)};this.printSolution=function(){return Y.call(this,c)};this.getSolutionString=function(){return ab.call(this,c)};this.solve=function(i){if(!i||i&lt;=1){O.call(this);r();return this.solve(2)}x=i;while(B.call(this,i)){if(this.isSolved()){return true}if(Q.call(this)){return false}}var ai=i+1;var aj=i+2;for(var ah=0;y.call(this,ai,ah);ah++){if(Q.call(this)||!this.solve(aj)){M.call(this,aj);M.call(this,ai)}else{return true}}return false};this.countSolutions=function(ai,an){if(!ai||ai&lt;=1){var aj=k;this.setRecordHistory(false);var al=ae;this.setLogHistory(false);O.call(this);var ah=this.countSolutions(2,false);this.setRecordHistory(aj);this.setLogHistory(al);return ah}else{while(B.call(this,ai)){if(this.isSolved()){M.call(this,ai);return 1}if(Q.call(this)){M.call(this,ai);return 0}}var i=0;var am=ai+1;for(var ak=0;y.call(this,am,ak);ak++){i+=this.countSolutions(am,an);if(an&amp;&amp;i>=2){M.call(this,ai);return i}}M.call(this,ai);return i}};this.isSolved=function(){for(var ah=0;ah&lt;qqwing.BOARD_SIZE;ah++){if(c[ah]==0){return false}}return true};this.getSolveHistory=function(){if(this.isSolved()){return q}else{return"No solve history - Puzzle is not possible to solve."}};this.getSolveHistoryString=function(){if(this.isSolved()){return ac.call(this,q)}else{return"No solve history - Puzzle is not possible to solve."}};this.printSolveHistory=function(){if(this.isSolved()){b(q)}else{L("No solve history - Puzzle is not possible to solve.")}};this.setRecordHistory=function(i){k=i};this.setLogHistory=function(i){ae=i};this.setPrintStyle=function(i){S=i};this.generatePuzzle=function(){return this.generatePuzzleSymmetry(qqwing.Symmetry.NONE)};this.generatePuzzleSymmetry=function(at){if(at==qqwing.Symmetry.RANDOM){at=n.call(this)}var ai=k;this.setRecordHistory(false);var ap=ae;this.setLogHistory(false);E.call(this);r.call(this);this.solve();if(at==qqwing.Symmetry.NONE){G.call(this)}for(var am=0;am&lt;qqwing.BOARD_SIZE;am++){z[am]=c[am]}r.call(this);for(var am=0;am&lt;qqwing.BOARD_SIZE;am++){var an=ad[am];if(z[an]>0){var ar=-1;var aq=-1;var ao=-1;switch(at){case qqwing.Symmetry.ROTATE90:aq=j(qqwing.ROW_COL_SEC_SIZE-1-ag(an),K(an));ao=j(ag(an),qqwing.ROW_COL_SEC_SIZE-1-K(an));case qqwing.Symmetry.ROTATE180:ar=j(qqwing.ROW_COL_SEC_SIZE-1-K(an),qqwing.ROW_COL_SEC_SIZE-1-ag(an));break;case qqwing.Symmetry.MIRROR:ar=j(K(an),qqwing.ROW_COL_SEC_SIZE-1-ag(an));break;case qqwing.Symmetry.FLIP:ar=j(qqwing.ROW_COL_SEC_SIZE-1-K(an),ag(an));break}var ah=z[an];z[an]=0;var al=0;if(ar>=0){al=z[ar];z[ar]=0}var ak=0;if(aq>=0){ak=z[aq];z[aq]=0}var aj=0;if(ao>=0){aj=z[ao];z[ao]=0}O.call(this);if(this.countSolutions(2,true)>1){z[an]=ah;if(ar>=0&amp;&amp;al!=0){z[ar]=al}if(aq>=0&amp;&amp;ak!=0){z[aq]=ak}if(ao>=0&amp;&amp;aj!=0){z[ao]=aj}}}}O.call(this);this.setRecordHistory(ai);this.setLogHistory(ap);return true};this.getGivenCount=function(){var ai=0;for(var ah=0;ah&lt;qqwing.BOARD_SIZE;ah++){if(z[ah]!=0){ai++}}return ai};this.getSingleCount=function(){return s.call(this,H,qqwing.LogType.SINGLE)};this.getHiddenSingleCount=function(){return(s.call(this,H,qqwing.LogType.HIDDEN_SINGLE_ROW)+s.call(this,H,qqwing.LogType.HIDDEN_SINGLE_COLUMN)+s.call(this,H,qqwing.LogType.HIDDEN_SINGLE_SECTION))};this.getNakedPairCount=function(){return(s.call(this,H,qqwing.LogType.NAKED_PAIR_ROW)+s.call(this,H,qqwing.LogType.NAKED_PAIR_COLUMN)+s.call(this,H,qqwing.LogType.NAKED_PAIR_SECTION))};this.getHiddenPairCount=function(){return(s.call(this,H,qqwing.LogType.HIDDEN_PAIR_ROW)+s.call(this,H,qqwing.LogType.HIDDEN_PAIR_COLUMN)+s.call(this,H,qqwing.LogType.HIDDEN_PAIR_SECTION))};this.getBoxLineReductionCount=function(){return(s.call(this,H,qqwing.LogType.ROW_BOX)+s.call(this,H,qqwing.LogType.COLUMN_BOX))};this.getPointingPairTripleCount=function(){return(s.call(this,H,qqwing.LogType.POINTING_PAIR_TRIPLE_ROW)+s.call(this,H,qqwing.LogType.POINTING_PAIR_TRIPLE_COLUMN))};this.getGuessCount=function(){return s.call(this,H,qqwing.LogType.GUESS)};this.getBacktrackCount=function(){return s.call(this,q,qqwing.LogType.ROLLBACK)};this.getSolveInstructions=function(){if(this.isSolved()){return H}else{return"No solve instructions - Puzzle is not possible to solve."}};this.getSolveInstructionsString=function(){if(this.isSolved()){return ac.call(this,H)}else{return"No solve instructions - Puzzle is not possible to solve."}};this.printSolveInstructions=function(){if(this.isSolved()){b(H)}else{L("No solve instructions - Puzzle is not possible to solve.")}};this.getDifficulty=function(){if(this.getGuessCount()>0){return qqwing.Difficulty.EXPERT}if(this.getBoxLineReductionCount()>0){return qqwing.Difficulty.INTERMEDIATE}if(this.getPointingPairTripleCount()>0){return qqwing.Difficulty.INTERMEDIATE}if(this.getHiddenPairCount()>0){return qqwing.Difficulty.INTERMEDIATE}if(this.getNakedPairCount()>0){return qqwing.Difficulty.INTERMEDIATE}if(this.getHiddenSingleCount()>0){return qqwing.Difficulty.EASY}if(this.getSingleCount()>0){return qqwing.Difficulty.SIMPLE}return qqwing.Difficulty.UNKNOWN};this.getDifficultyAsString=function(){var i=this.getDifficulty();switch(i){case qqwing.Difficulty.EXPERT:return"Expert";case qqwing.Difficulty.INTERMEDIATE:return"Intermediate";case qqwing.Difficulty.EASY:return"Easy";case qqwing.Difficulty.SIMPLE:return"Simple";default:return"Unknown"}}};qqwing.PrintStyle={ONE_LINE:0,COMPACT:1,READABLE:2,CSV:3};qqwing.Difficulty={UNKNOWN:0,SIMPLE:1,EASY:2,INTERMEDIATE:3,EXPERT:4};qqwing.Symmetry={NONE:0,ROTATE90:1,ROTATE180:2,MIRROR:3,FLIP:4,RANDOM:5};qqwing.LogType={GIVEN:0,SINGLE:1,HIDDEN_SINGLE_ROW:2,HIDDEN_SINGLE_COLUMN:3,HIDDEN_SINGLE_SECTION:4,GUESS:5,ROLLBACK:6,NAKED_PAIR_ROW:7,NAKED_PAIR_COLUMN:8,NAKED_PAIR_SECTION:9,POINTING_PAIR_TRIPLE_ROW:10,POINTING_PAIR_TRIPLE_COLUMN:11,ROW_BOX:12,COLUMN_BOX:13,HIDDEN_PAIR_ROW:14,HIDDEN_PAIR_COLUMN:15,HIDDEN_PAIR_SECTION:16};qqwing.GRID_SIZE=3;qqwing.ROW_COL_SEC_SIZE=qqwing.GRID_SIZE*qqwing.GRID_SIZE;qqwing.SEC_GROUP_SIZE=qqwing.ROW_COL_SEC_SIZE*qqwing.GRID_SIZE;qqwing.BOARD_SIZE=qqwing.ROW_COL_SEC_SIZE*qqwing.ROW_COL_SEC_SIZE;qqwing.POSSIBILITY_SIZE=qqwing.BOARD_SIZE*qqwing.ROW_COL_SEC_SIZE;function getMicroseconds(){return new Date().getTime()*1000}var workingButton=null;var workingImg=null;var puzzleStartTime;function generateNum(e,c){if(!workingButton){return}if(c>0){e.qqwing.setRecordHistory(e.printHistory||e.printInstructions||e.printStats||e.difficulty!=qqwing.Difficulty.UNKNOWN);e.qqwing.setPrintStyle(e.printStyle);e.qqwing.generatePuzzleSymmetry(e.symmetry);if(e.printSolution||e.printHistory||e.printStats||e.printInstructions||e.difficulty!=qqwing.Difficulty.UNKNOWN){e.qqwing.solve()}if(e.difficulty==qqwing.Difficulty.UNKNOWN||e.difficulty==e.qqwing.getDifficulty()){e.doneCount++;var b=e.qqwing.getPuzzleString();if(e.printSolution){b+=e.qqwing.getSolutionString()}if(e.printHistory){b+=e.qqwing.getSolveHistoryString()}if(e.printInstructions){b+=e.qqwing.getSolveInstructionsString()}var a=getMicroseconds();if(e.timer){var d=(a-puzzleStartTime)/1000;if(e.printStyle==qqwing.PrintStyle.CSV){b+=d+","}else{b+="Time: "+d+" milliseconds\n"}puzzleStartTime=a}if(e.printStats){b+=stats(e)}b+="\n";addOutput(b);c--}setTimeout(function(){generateNum(e,c)},0)}else{var f=getMicroseconds();if(e.timer){var d=(f-e.applicationStartTime)/1000000;addOutput(e.doneCount+" puzzle"+((e.doneCount==1)?"":"s")+" generated in "+d+" seconds.")}clearWorking("Generate")}}function clearWorking(a){setError("");if(workingButton&amp;&amp;a){workingButton.value=a;workingButton=null}if(workingImg){workingImg.parentElement.removeChild(workingImg)}workingImg=null;el("downloadavailable").style.display="block"}function el(a){return document.getElementById(a)}function startWork(a){el("output").innerHTML="";if(a){a.value="Stop";workingButton=a}workingImg=document.createElement("img");workingImg.src="loading.gif";el("working").appendChild(workingImg)}function setError(a){var b=el("error");if(b){b.innerHTML=a}}function addOutput(a){el("output").appendChild(document.createTextNode(a))}function getOptData(a){return{printSolution:a.printsolution&amp;&amp;a.printsolution.checked,printPuzzle:a.printpuzzle&amp;&amp;a.printpuzzle.checked,printHistory:a.printhistory.checked,printInstructions:a.printinstructions.checked,timer:a.timer.checked,countSolutions:a.countsolutions&amp;&amp;a.countsolutions.checked,printStyle:parseInt(a.outputselect.value),printStats:a.printstats.checked,difficulty:a.difficultyselect?parseInt(a.difficultyselect.value):0,symmetry:a.symmetryselect?parseInt(a.symmetryselect.value):0,applicationStartTime:getMicroseconds(),qqwing:new qqwing(),doneCount:0}}function csvHeader(d,c,a){var b="";if(c){b+="Puzzle,"}if(a){b+="Solution,"}if(d.printHistory){b+="Solve History,"}if(d.printInstructions){b+="Solve Instructions,"}if(d.timer){b+="Time (milliseconds),"}if(d.printStats){b+="Givens,Singles,Hidden Singles,Naked Pairs,Hidden Pairs,Pointing Pairs/Triples,Box/Line Intersections,Guesses,Backtracks,Difficulty"}b+="\n";return b}function stats(j){var k="";var f=j.qqwing.getGivenCount();var a=j.qqwing.getSingleCount();var b=j.qqwing.getHiddenSingleCount();var l=j.qqwing.getNakedPairCount();var i=j.qqwing.getHiddenPairCount();var d=j.qqwing.getPointingPairTripleCount();var c=j.qqwing.getBoxLineReductionCount();var h=j.qqwing.getGuessCount();var g=j.qqwing.getBacktrackCount();var e=j.qqwing.getDifficultyAsString();if(j.printStyle==qqwing.PrintStyle.CSV){k+=f+","+a+","+b+","+l+","+i+","+d+","+c+","+h+","+g+","+e+","}else{k+="Number of Givens: "+f+"\n";k+="Number of Singles: "+a+"\n";k+="Number of Hidden Singles: "+b+"\n";k+="Number of Naked Pairs: "+l+"\n";k+="Number of Hidden Pairs: "+i+"\n";k+="Number of Pointing Pairs/Triples: "+d+"\n";k+="Number of Box/Line Intersections: "+c+"\n";k+="Number of Guesses: "+h+"\n";k+="Number of Backtracks: "+g+"\n";k+="Difficulty: "+e+"\n"}return k}function generate(a){clearWorking();if(workingButton){clearWorking("Generate")}else{startWork(a.generatebutton);var b=getOptData(a);if(b.printStyle==qqwing.PrintStyle.CSV){addOutput(csvHeader(b,true,b.printSolution))}puzzleStartTime=getMicroseconds();generateNum(b,a.generatenumber.value)}}function solve(b){clearWorking();if(workingButton){clearWorking("Solve")}else{var c=getOptData(b);var a=getPuzzles(b.tosolve.value);if(!a.length){return setError("No puzzles were found.  Puzzles must be 81 numbers with zeros or periods for the unknowns.   For example: &lt;pre>.47..2....18.5.7.4..59...2...............9..2....713.9.72....3...1......5.38.....&lt;/pre>")}startWork(b.solvebutton);if(c.printStyle==qqwing.PrintStyle.CSV){addOutput(csvHeader(c,c.printPuzzle,true))}solveNum(c,a)}}function solveNum(f,c){if(!workingButton){return}if(f.doneCount&lt;c.length){puzzleStartTime=getMicroseconds();f.qqwing.setRecordHistory(f.printHistory||f.printInstructions||f.printStats||f.difficulty!=qqwing.Difficulty.UNKNOWN);f.qqwing.setPrintStyle(f.printStyle);f.qqwing.setPuzzle(c[f.doneCount]);f.qqwing.solve();var d="";if(f.printPuzzle){d+=f.qqwing.getPuzzleString()}if(!f.qqwing.isSolved()){d+="Puzzle has no solution.";d+=printStyle==qqwing.PrintStyle.CSV?",":"\n"}else{d+=f.qqwing.getSolutionString();if(f.printHistory){d+=f.qqwing.getSolveHistoryString()}if(f.printInstructions){d+=f.qqwing.getSolveInstructionsString()}if(f.countSolutions){var b=f.qqwing.countSolutions();if(f.printStyle==qqwing.PrintStyle.CSV){d+=b+","}else{if(b==1){d+="solution to the puzzle is unique.\n"}else{d+="There are "+b+" solutions to the puzzle.\n"}}}var a=getMicroseconds();if(f.timer){var e=(a-puzzleStartTime)/1000;if(f.printStyle==qqwing.PrintStyle.CSV){d+=e+","}else{d+="Time: "+e+" milliseconds\n"}}if(f.printStats){d+=stats(f)}d+="\n"}addOutput(d);f.doneCount++;setTimeout(function(){solveNum(f,c)},0)}else{var g=getMicroseconds();if(f.timer){var e=(g-f.applicationStartTime)/1000000;addOutput(f.doneCount+" puzzle"+((f.doneCount==1)?"":"s")+" in "+e+" seconds.")}clearWorking("Solve")}}function getPuzzles(b){var e=[];var d=[];for(var a=0;a&lt;b.length;a++){var f=b.charAt(a);if(f[0]>="1"&amp;&amp;f[0]&lt;="9"){d.push(f-"0")}if(f[0]=="."||f[0]=="0"){d.push(0)}if(d.length==qqwing.BOARD_SIZE){e.push(d);d=[]}}return e};
	</script>
	<script>
		var svgRoot = document.getElementsByTagName('svg')[0];
		
		var clickedElement;
		var mousePosition = {x: 0, y: 0};
		
		window.addEventListener('mousemove', ev => {
		    mousePosition.x = ev.pageX;
		    mousePosition.y = ev.pageY;
		});
		
		window.addEventListener('click', ev => {
		    let nodeName = ev.target.localName;
		    if (nodeName == "rect") {
		    //console.log(ev.target.id);
		        let nodeId = ev.target.id.split('.')
		        nodeId.pop();
		        clickedElement=nodeId.join('.');
		    }
		});
		
		window.addEventListener("keypress", ev => {
		    switch (ev.key) {
		        case '1':
		        case '2':
		        case '3':
		        case '4':
		        case '5':
		        case '6':
		        case '7':
		        case '8':
		        case '9':
		       		placeNum(ev.key);
		       		break;
		       	case '0':
		       	case 'd':
		       	case 'r':
		       	case 's':
		       	case 'e':
		       		placeNum(' ');
		       		break;
		    }
		}, false);
		
		
		function placeNum(num){
		  //console.log(clickedElement);
			let use = document.getElementById(clickedElement);
			//console.log("placing "+num+" on "+use.id);
			for(const p of use.children) {
				//console.log(p);
		        if(p.attributes.name.value === "value") {
		            p.attributes.value.value = num;
		        }
		    }
		    tcsvg.addedUse(use);
		    sudokucheck();
		}
		
		function sudokucheck(){
		  var c,c1,c2,cv,cv1,cv2;
		
		  for(var i=1;i&lt;=9;i++){
		    for(var j=1;j&lt;=9;j++){
		      c = document.getElementById("c"+i+j);
		      for(const p of c.children) {
		        if(p.attributes.name.value === "value") {
		
		            cv = p.attributes.value.value;      
		        }
		      }
		      if (cv==" ") continue;
		
		      var conflict = false;
		      for(var k=1;k&lt;=9;k++){
		        c1 = document.getElementById("c"+k+j);
		        c2 = document.getElementById("c"+i+k);
		        for(const p of c1.children) {
		          if(p.attributes.name.value === "value") {
		              c1v = p.attributes.value.value;      
		          }
		        }
		        for(const p of c2.children) {
		          if(p.attributes.name.value === "value") {
		              c2v = p.attributes.value.value;      
		          }
		        }
		        if((c1v==cv &amp;&amp; c1!=c) || (c2v==cv &amp;&amp; c2!=c)) {
		          conflict = true;
		        }
		
		
		      }
		      let li = Math.floor((i-1)/3);
		      let lj = Math.floor((j-1)/3);
		      for(var ii=li*3+1;ii&lt;=li*3+3;ii++){
		        for(var jj=lj*3+1;jj&lt;=lj*3+3;jj++){
		          c1 = document.getElementById("c"+ii+jj);
		          for(const p of c1.children) {
		            if(p.attributes.name.value === "value") {
		                c1v = p.attributes.value.value;      
		            }
		          }
		          if((c1v==cv &amp;&amp; c1!=c)) {
		            conflict = true;
		          }
		        }
		      }
		
		
		
		      if(conflict){
		      	console.log("conflict on c"+i+j);
		        document.getElementById("c"+i+j+".text").setAttribute('class', "conflict");
		        for(const p of c.children) {
		          if(p.attributes.name.value === "hasConflict") {
		
		              p.attributes.value.value = 1;
		          }
		        } 
		      } else {
		        document.getElementById("c"+i+j+".text").setAttribute('class', "");
		        for(const p of c.children) {
		          if(p.attributes.name.value === "hasConflict") {
		
		              p.attributes.value.value = 0;      
		          }
		        }
		      }
		      tcsvg.addedUse(c)
		    }
		  }
		}
		
		function createCell(x,y,v) {
			let cellName='c'+x+y;
		
			let use = document.createSVGElement('use');
			use.setAttribute('id',cellName);
			use.setAttribute('href',"#cell");
			use.appendChild(createParam('x',x));
			use.appendChild(createParam('y',y));
			use.appendChild(createParam('value',v));
		  use.appendChild(createParam('hasConflict',0));
		
			cells.appendChild(use);
			tcsvg.addedUse(use);
		}
		
		function createParam(name, value){
			let param = document.createSVGElement('param');
			param.setAttribute('name',name);
			param.setAttribute('value',value);
		
			return param;
		}
		
		function createGrid(size) {
		  qq = new qqwing();
		  qq.generatePuzzleSymmetry(qqwing.Symmetry.NONE);
		  qq.setPrintStyle(qqwing.PrintStyle.ONE_LINE);
		  sudoku = qq.getPuzzleString();
		
		  for(i=1;i&lt;=size;i++){
				for (var j = 1; j &lt;=size; j++) {
					createCell(i,j,(sudoku[0]==".")?" ":sudoku[0]);
					sudoku = sudoku.substring(1);
				}
			}
		}
		
		document.createSVGElement = function(name) {
			return document.createElementNS("http://www.w3.org/2000/svg",name);
		}
		
		var cells = document.createSVGElement('g');
		cells.setAttribute('id','cells');
		svgRoot.appendChild(cells);
		
		createGrid(9);
	</script>
</svg>
